function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
import { PersistError } from "./errors.mjs";
import isDeepEqual from "./is-deep-equal.mjs";
export var saveAll = function saveAll(state, oldState, _ref) {
  var prefix = _ref.prefix,
    driver = _ref.driver,
    serialize = _ref.serialize;
  if (!isDeepEqual(state, oldState)) {
    return driver.setItem(prefix + "rootState", serialize(state, 'rootState'));
  }
};
export var saveAllKeyed = function saveAllKeyed(state, oldState, _ref2) {
  var prefix = _ref2.prefix,
    driver = _ref2.driver,
    serialize = _ref2.serialize;
  return Promise.all(Object.keys(state).map(function (key) {
    if (isDeepEqual(state[key], oldState[key])) {
      return Promise.resolve();
    }
    return driver.setItem("" + prefix + key, serialize(state[key], key));
  }));
};
export var persist = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator(function* (state, oldState, _ref3) {
    if (state === void 0) {
      state = {};
    }
    if (oldState === void 0) {
      oldState = {};
    }
    var prefix = _ref3.prefix,
      driver = _ref3.driver,
      persistWholeStore = _ref3.persistWholeStore,
      serialize = _ref3.serialize,
      errorHandler = _ref3.errorHandler;
    try {
      var save = persistWholeStore ? saveAll : saveAllKeyed;
      yield save(state, oldState, {
        prefix: prefix,
        driver: driver,
        serialize: serialize
      });
    } catch (err) {
      errorHandler(new PersistError(err));
    }
  });
  return function persist(_x, _x2, _x3) {
    return _ref4.apply(this, arguments);
  };
}();
//# sourceMappingURL=persist.mjs.map