"use strict";

exports.__esModule = true;
exports.rehydrate = exports.loadAllKeyed = exports.loadAll = void 0;
var _actionTypes = require("./action-types.cjs");
var _utils = require("./utils.cjs");
var _errors = require("./errors.cjs");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
var loadAll = exports.loadAll = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator(function* (_ref) {
    var rememberedKeys = _ref.rememberedKeys,
      driver = _ref.driver,
      prefix = _ref.prefix,
      unserialize = _ref.unserialize;
    var key = 'rootState';
    var data = yield driver.getItem("" + prefix + key);
    if (data === null || data === undefined) {
      return {};
    }
    return (0, _utils.pick)(unserialize(data, key), rememberedKeys);
  });
  return function loadAll(_x) {
    return _ref2.apply(this, arguments);
  };
}();
var loadAllKeyed = exports.loadAllKeyed = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator(function* (_ref3) {
    var rememberedKeys = _ref3.rememberedKeys,
      driver = _ref3.driver,
      prefix = _ref3.prefix,
      unserialize = _ref3.unserialize;
    var items = yield Promise.all(rememberedKeys.map(function (key) {
      return driver.getItem("" + prefix + key);
    }));
    return rememberedKeys.reduce(function (obj, key, i) {
      if (items[i] !== null && items[i] !== undefined) {
        obj[key] = unserialize(items[i], key);
      }
      return obj;
    }, {});
  });
  return function loadAllKeyed(_x2) {
    return _ref4.apply(this, arguments);
  };
}();
var rehydrate = exports.rehydrate = /*#__PURE__*/function () {
  var _ref6 = _asyncToGenerator(function* (store, rememberedKeys, _ref5) {
    var prefix = _ref5.prefix,
      driver = _ref5.driver,
      persistWholeStore = _ref5.persistWholeStore,
      unserialize = _ref5.unserialize,
      errorHandler = _ref5.errorHandler;
    var state = store.getState();
    try {
      var load = persistWholeStore ? loadAll : loadAllKeyed;
      state = _objectSpread(_objectSpread({}, state), yield load({
        rememberedKeys: rememberedKeys,
        driver: driver,
        prefix: prefix,
        unserialize: unserialize
      }));
    } catch (err) {
      errorHandler(new _errors.RehydrateError(err));
    }
    store.dispatch({
      type: _actionTypes.REMEMBER_REHYDRATED,
      payload: state
    });
  });
  return function rehydrate(_x3, _x4, _x5) {
    return _ref6.apply(this, arguments);
  };
}();
//# sourceMappingURL=rehydrate.cjs.map