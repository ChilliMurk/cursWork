import { ExtendedOptions } from './types';
type PersistOptions = Pick<ExtendedOptions, 'prefix' | 'driver' | 'serialize' | 'persistWholeStore' | 'errorHandler'>;
type SaveAllOptions = Pick<ExtendedOptions, 'prefix' | 'driver' | 'serialize'>;
export declare const saveAll: (state: any, oldState: any, { prefix, driver, serialize }: SaveAllOptions) => any;
export declare const saveAllKeyed: (state: any, oldState: any, { prefix, driver, serialize }: SaveAllOptions) => Promise<any[]>;
export declare const persist: (state: {} | undefined, oldState: {} | undefined, { prefix, driver, persistWholeStore, serialize, errorHandler }: PersistOptions) => Promise<void>;
export {};
//# sourceMappingURL=persist.d.ts.map