import {
  combineReducers
} from "./chunk-RJJ6DPM5.js";
import "./chunk-EQCVQC35.js";

// node_modules/redux-remember/dist/mjs/action-types.mjs
var REMEMBER_REHYDRATED = "@@REMEMBER_REHYDRATED";
var REMEMBER_PERSISTED = "@@REMEMBER_PERSISTED";

// node_modules/redux-remember/dist/mjs/utils.mjs
var pick = function pick2(src, keys) {
  if (src === null || typeof src !== "object") {
    return {};
  }
  var index = -1;
  var dest = {};
  while (++index < keys.length) {
    var key = keys[index];
    if (src.hasOwnProperty(key)) {
      dest[key] = src[key];
    }
  }
  return dest;
};
var throttle = function throttle2(callback, msecs) {
  var nextCallNow = 0;
  var nextCallTimeout;
  return function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var now = +/* @__PURE__ */ new Date();
    var timeLeft = (nextCallNow || now) - now;
    if (timeLeft <= 0 && !nextCallTimeout) {
      nextCallNow = now + msecs;
      callback.apply(void 0, args);
      return;
    }
    if (nextCallTimeout) {
      clearTimeout(nextCallTimeout);
      nextCallTimeout = null;
    }
    nextCallTimeout = setTimeout(function() {
      nextCallNow = +/* @__PURE__ */ new Date() + msecs;
      callback.apply(void 0, args);
      clearTimeout(nextCallTimeout);
      nextCallTimeout = null;
    }, timeLeft);
  };
};
var debounce = function debounce2(callback, msecs) {
  var nextCallTimeout;
  return function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    clearTimeout(nextCallTimeout);
    nextCallTimeout = setTimeout(function() {
      callback.apply(void 0, args);
      nextCallTimeout = null;
    }, msecs);
  };
};

// node_modules/redux-remember/dist/mjs/errors.mjs
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}
function _wrapNativeSuper(t) {
  var r = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper = function _wrapNativeSuper2(t2) {
    if (null === t2 || !_isNativeFunction(t2)) return t2;
    if ("function" != typeof t2) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t2)) return r.get(t2);
      r.set(t2, Wrapper);
    }
    function Wrapper() {
      return _construct(t2, arguments, _getPrototypeOf(this).constructor);
    }
    return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t2);
  }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t;
  })();
}
function _isNativeFunction(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf(t);
}
var CustomError = (function(_Error) {
  function CustomError2(originalError) {
    var _originalError$stack;
    var _this;
    var isOrigErrorValid = originalError instanceof Error;
    var prevStackLines = isOrigErrorValid ? (_originalError$stack = originalError.stack) == null ? void 0 : _originalError$stack.split("\n") : [];
    _this = _Error.call(this, isOrigErrorValid ? originalError.name + ": " + originalError.message : "") || this;
    _this.originalError = void 0;
    _this.name = _this.constructor.name;
    if (isOrigErrorValid) {
      _this.originalError = originalError;
    }
    if (prevStackLines != null && prevStackLines.length && _this.stack) {
      _this.stack = _this.stack.split("\n").slice(0, 2).concat(prevStackLines.slice(1, prevStackLines.length)).join("\n");
    }
    return _this;
  }
  _inheritsLoose(CustomError2, _Error);
  return CustomError2;
})(_wrapNativeSuper(Error));
var PersistError = (function(_CustomError2) {
  function PersistError2() {
    return _CustomError2.apply(this, arguments) || this;
  }
  _inheritsLoose(PersistError2, _CustomError2);
  return PersistError2;
})(CustomError);
var RehydrateError = (function(_CustomError3) {
  function RehydrateError2() {
    return _CustomError3.apply(this, arguments) || this;
  }
  _inheritsLoose(RehydrateError2, _CustomError3);
  return RehydrateError2;
})(CustomError);

// node_modules/redux-remember/dist/mjs/rehydrate.mjs
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c), u = i.value;
  } catch (n2) {
    return void e(n2);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function() {
    var t = this, e = arguments;
    return new Promise(function(r, o) {
      var a = n.apply(t, e);
      function _next(n2) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n2);
      }
      function _throw(n2) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n2);
      }
      _next(void 0);
    });
  };
}
var loadAll = (function() {
  var _ref2 = _asyncToGenerator(function* (_ref) {
    var rememberedKeys = _ref.rememberedKeys, driver = _ref.driver, prefix = _ref.prefix, unserialize = _ref.unserialize;
    var key = "rootState";
    var data = yield driver.getItem("" + prefix + key);
    if (data === null || data === void 0) {
      return {};
    }
    return pick(unserialize(data, key), rememberedKeys);
  });
  return function loadAll2(_x) {
    return _ref2.apply(this, arguments);
  };
})();
var loadAllKeyed = (function() {
  var _ref4 = _asyncToGenerator(function* (_ref3) {
    var rememberedKeys = _ref3.rememberedKeys, driver = _ref3.driver, prefix = _ref3.prefix, unserialize = _ref3.unserialize;
    var items = yield Promise.all(rememberedKeys.map(function(key) {
      return driver.getItem("" + prefix + key);
    }));
    return rememberedKeys.reduce(function(obj, key, i) {
      if (items[i] !== null && items[i] !== void 0) {
        obj[key] = unserialize(items[i], key);
      }
      return obj;
    }, {});
  });
  return function loadAllKeyed2(_x2) {
    return _ref4.apply(this, arguments);
  };
})();
var rehydrate = (function() {
  var _ref6 = _asyncToGenerator(function* (store, rememberedKeys, _ref5) {
    var prefix = _ref5.prefix, driver = _ref5.driver, persistWholeStore = _ref5.persistWholeStore, unserialize = _ref5.unserialize, errorHandler = _ref5.errorHandler;
    var state = store.getState();
    try {
      var load = persistWholeStore ? loadAll : loadAllKeyed;
      state = _objectSpread(_objectSpread({}, state), yield load({
        rememberedKeys,
        driver,
        prefix,
        unserialize
      }));
    } catch (err) {
      errorHandler(new RehydrateError(err));
    }
    store.dispatch({
      type: REMEMBER_REHYDRATED,
      payload: state
    });
  });
  return function rehydrate2(_x3, _x4, _x5) {
    return _ref6.apply(this, arguments);
  };
})();

// node_modules/redux-remember/dist/mjs/is-deep-equal.mjs
function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t) return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function() {
      return o >= r.length ? { done: true } : { done: false, value: r[o++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
var getObjectType = function getObjectType2(o) {
  var _Object$prototype$toS;
  return (_Object$prototype$toS = Object.prototype.toString.call(o).match(/\[object (.*)\]/)) == null ? void 0 : _Object$prototype$toS[1];
};
var isTypedArray = function isTypedArray2(o) {
  return /^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\]$/.test(Object.prototype.toString.call(o));
};
var _isDeepEqual = function isDeepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== "object" || typeof b !== "object" || a === null || a === void 0 || b === null || b === void 0) {
    return a !== a && b !== b;
  }
  if (a.constructor !== b.constructor) {
    return false;
  }
  if (a.constructor === RegExp) {
    return a.source === b.source && a.flags === b.flags;
  }
  if (Array.isArray(a)) {
    if (a.length !== b.length) {
      return false;
    }
    for (var i = a.length; i-- !== 0; ) {
      if (!_isDeepEqual(a[i], b[i])) {
        return false;
      }
    }
    return true;
  }
  if (isTypedArray(a) && isTypedArray(b)) {
    if (a.byteLength !== b.byteLength) {
      return false;
    }
    for (var _i = a.byteLength; _i-- !== 0; ) {
      if (!_isDeepEqual(a[_i], b[_i])) {
        return false;
      }
    }
    return true;
  }
  var aType = getObjectType(a);
  var bType = getObjectType(b);
  if (aType === "DataView" && bType === "DataView") {
    if (a.byteLength !== b.byteLength || a.byteOffset !== b.byteOffset) {
      return false;
    }
    return _isDeepEqual(a.buffer, b.buffer);
  }
  if (aType === "ArrayBuffer" && bType === "ArrayBuffer") {
    if (a.byteLength !== b.byteLength) {
      return false;
    }
    return _isDeepEqual(new Uint8Array(a), new Uint8Array(b));
  }
  if (aType === "Map" && bType === "Map") {
    if (a.size !== b.size) {
      return false;
    }
    for (var _iterator = _createForOfIteratorHelperLoose(a.entries()), _step; !(_step = _iterator()).done; ) {
      var _step$value = _step.value, key = _step$value[0];
      if (!b.has(key)) {
        return false;
      }
    }
    for (var _iterator2 = _createForOfIteratorHelperLoose(a.entries()), _step2; !(_step2 = _iterator2()).done; ) {
      var _step2$value = _step2.value, _key = _step2$value[0], value = _step2$value[1];
      if (!_isDeepEqual(value, b.get(_key))) {
        return false;
      }
    }
    return true;
  }
  if (aType === "Set" && bType === "Set") {
    if (a.size !== b.size) {
      return false;
    }
    for (var _iterator3 = _createForOfIteratorHelperLoose(a.entries()), _step3; !(_step3 = _iterator3()).done; ) {
      var _step3$value = _step3.value, _key2 = _step3$value[0];
      if (!b.has(_key2)) {
        return false;
      }
    }
    return true;
  }
  if (aType === "Date" && bType === "Date") {
    return +a === +b;
  }
  var aKeys = Object.keys(a);
  if (aKeys.length !== Object.keys(b).length) {
    return false;
  }
  for (var _i2 = aKeys.length; _i2-- !== 0; ) {
    if (!Object.prototype.hasOwnProperty.call(b, aKeys[_i2])) {
      return false;
    }
  }
  for (var _i3 = aKeys.length; _i3-- !== 0; ) {
    var _key3 = aKeys[_i3];
    if (!_isDeepEqual(a[_key3], b[_key3])) {
      return false;
    }
  }
  if (aType !== "Object" && bType !== "Object") {
    return a === b;
  }
  return true;
};
var is_deep_equal_default = _isDeepEqual;

// node_modules/redux-remember/dist/mjs/persist.mjs
function asyncGeneratorStep2(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c), u = i.value;
  } catch (n2) {
    return void e(n2);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator2(n) {
  return function() {
    var t = this, e = arguments;
    return new Promise(function(r, o) {
      var a = n.apply(t, e);
      function _next(n2) {
        asyncGeneratorStep2(a, r, o, _next, _throw, "next", n2);
      }
      function _throw(n2) {
        asyncGeneratorStep2(a, r, o, _next, _throw, "throw", n2);
      }
      _next(void 0);
    });
  };
}
var saveAll = function saveAll2(state, oldState, _ref) {
  var prefix = _ref.prefix, driver = _ref.driver, serialize = _ref.serialize;
  if (!is_deep_equal_default(state, oldState)) {
    return driver.setItem(prefix + "rootState", serialize(state, "rootState"));
  }
};
var saveAllKeyed = function saveAllKeyed2(state, oldState, _ref2) {
  var prefix = _ref2.prefix, driver = _ref2.driver, serialize = _ref2.serialize;
  return Promise.all(Object.keys(state).map(function(key) {
    if (is_deep_equal_default(state[key], oldState[key])) {
      return Promise.resolve();
    }
    return driver.setItem("" + prefix + key, serialize(state[key], key));
  }));
};
var persist = (function() {
  var _ref4 = _asyncToGenerator2(function* (state, oldState, _ref3) {
    if (state === void 0) {
      state = {};
    }
    if (oldState === void 0) {
      oldState = {};
    }
    var prefix = _ref3.prefix, driver = _ref3.driver, persistWholeStore = _ref3.persistWholeStore, serialize = _ref3.serialize, errorHandler = _ref3.errorHandler;
    try {
      var save = persistWholeStore ? saveAll : saveAllKeyed;
      yield save(state, oldState, {
        prefix,
        driver,
        serialize
      });
    } catch (err) {
      errorHandler(new PersistError(err));
    }
  });
  return function persist2(_x, _x2, _x3) {
    return _ref4.apply(this, arguments);
  };
})();

// node_modules/redux-remember/dist/mjs/init.mjs
function asyncGeneratorStep3(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c), u = i.value;
  } catch (n2) {
    return void e(n2);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator3(n) {
  return function() {
    var t = this, e = arguments;
    return new Promise(function(r, o) {
      var a = n.apply(t, e);
      function _next(n2) {
        asyncGeneratorStep3(a, r, o, _next, _throw, "next", n2);
      }
      function _throw(n2) {
        asyncGeneratorStep3(a, r, o, _next, _throw, "throw", n2);
      }
      _next(void 0);
    });
  };
}
var init = (function() {
  var _ref2 = _asyncToGenerator3(function* (store, rememberedKeys, _ref) {
    var prefix = _ref.prefix, driver = _ref.driver, serialize = _ref.serialize, unserialize = _ref.unserialize, persistThrottle = _ref.persistThrottle, persistDebounce = _ref.persistDebounce, persistWholeStore = _ref.persistWholeStore, errorHandler = _ref.errorHandler;
    yield rehydrate(store, rememberedKeys, {
      prefix,
      driver,
      unserialize,
      persistWholeStore,
      errorHandler
    });
    var oldState = {};
    var persistFunc = (function() {
      var _ref3 = _asyncToGenerator3(function* () {
        var state = pick(store.getState(), rememberedKeys);
        yield persist(state, oldState, {
          prefix,
          driver,
          serialize,
          persistWholeStore,
          errorHandler
        });
        if (!is_deep_equal_default(state, oldState)) {
          store.dispatch({
            type: REMEMBER_PERSISTED,
            payload: state
          });
        }
        oldState = state;
      });
      return function persistFunc2() {
        return _ref3.apply(this, arguments);
      };
    })();
    if (persistDebounce && persistDebounce > 0) {
      store.subscribe(debounce(persistFunc, persistDebounce));
    } else {
      store.subscribe(throttle(persistFunc, persistThrottle));
    }
  });
  return function init2(_x, _x2, _x3) {
    return _ref2.apply(this, arguments);
  };
})();
var init_default = init;

// node_modules/redux-remember/dist/mjs/index.mjs
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty2(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty2(e, r, t) {
  return (r = _toPropertyKey2(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey2(t) {
  var i = _toPrimitive2(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _toPrimitive2(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var rememberReducer = function rememberReducer2(reducer) {
  var data = {
    state: {}
  };
  return function(state, action) {
    var _action$type;
    if (state === void 0) {
      state = data.state;
    }
    if (action.type && ((action == null ? void 0 : action.type) === "@@INIT" || action != null && (_action$type = action.type) != null && _action$type.startsWith("@@redux/INIT"))) {
      data.state = _objectSpread2({}, state);
    }
    var rootReducer = typeof reducer === "function" ? reducer : combineReducers(reducer);
    switch (action.type) {
      case REMEMBER_REHYDRATED: {
        var rehydratedState = _objectSpread2(_objectSpread2({}, data.state), (action == null ? void 0 : action.payload) || {});
        data.state = rootReducer(rehydratedState, {
          type: REMEMBER_REHYDRATED,
          payload: rehydratedState
        });
        return data.state;
      }
      default:
        return rootReducer(state, action);
    }
  };
};
var rememberEnhancer = function rememberEnhancer2(driver, rememberedKeys, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$prefix = _ref.prefix, prefix = _ref$prefix === void 0 ? "@@remember-" : _ref$prefix, _ref$serialize = _ref.serialize, serialize = _ref$serialize === void 0 ? function(data) {
    return JSON.stringify(data);
  } : _ref$serialize, _ref$unserialize = _ref.unserialize, unserialize = _ref$unserialize === void 0 ? function(data) {
    return JSON.parse(data);
  } : _ref$unserialize, _ref$persistThrottle = _ref.persistThrottle, persistThrottle = _ref$persistThrottle === void 0 ? 100 : _ref$persistThrottle, persistDebounce = _ref.persistDebounce, _ref$persistWholeStor = _ref.persistWholeStore, persistWholeStore = _ref$persistWholeStor === void 0 ? false : _ref$persistWholeStor, initActionType = _ref.initActionType, _ref$errorHandler = _ref.errorHandler, errorHandler = _ref$errorHandler === void 0 ? console.warn : _ref$errorHandler;
  var storeCreator = function storeCreator2(createStore) {
    return function(rootReducer, preloadedState, enhancer) {
      var isInitialized = false;
      var initialize = function initialize2(store2) {
        return init_default(store2, rememberedKeys, {
          driver,
          prefix,
          serialize,
          unserialize,
          persistThrottle,
          persistDebounce,
          persistWholeStore,
          errorHandler
        });
      };
      var store = createStore(function(state, action) {
        if (!isInitialized && initActionType && action.type === initActionType) {
          isInitialized = true;
          setTimeout(function() {
            return initialize(store);
          }, 0);
        }
        return rootReducer(state, action);
      }, preloadedState, enhancer);
      if (!initActionType) {
        isInitialized = true;
        void initialize(store);
      }
      return store;
    };
  };
  return storeCreator;
};
export {
  PersistError,
  REMEMBER_PERSISTED,
  REMEMBER_REHYDRATED,
  RehydrateError,
  rememberEnhancer,
  rememberReducer
};
//# sourceMappingURL=redux-remember.js.map
