{
  "version": 3,
  "sources": ["../../redux-remember/src/action-types.ts", "../../redux-remember/src/utils.ts", "../../redux-remember/src/errors.ts", "../../redux-remember/src/rehydrate.ts", "../../redux-remember/src/is-deep-equal.ts", "../../redux-remember/src/persist.ts", "../../redux-remember/src/init.ts", "../../redux-remember/src/index.ts"],
  "sourcesContent": ["export const REMEMBER_REHYDRATED = '@@REMEMBER_REHYDRATED';\nexport const REMEMBER_PERSISTED = '@@REMEMBER_PERSISTED';\n", "type TimeoutHandle = ReturnType<typeof setTimeout>;\n\nexport const pick = <T extends Record<string, any>, K extends keyof T>(\n  src: T | null | undefined,\n  keys: K[]\n): Partial<T> => {\n  if (src === null || typeof src !== 'object') {\n    return {};\n  }\n\n  let index = -1;\n  const dest = {} as T;\n\n  while (++index < keys.length) {\n    const key = keys[index];\n\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n\n  return dest;\n};\n\nexport const throttle = <T extends (...args: any) => void>(\n  callback: T,\n  msecs: number\n): T => {\n  let nextCallNow = 0;\n  let nextCallTimeout: TimeoutHandle | null;\n\n  return ((...args: any): void => {\n    const now = +new Date();\n    const timeLeft = (nextCallNow || now) - now;\n\n    if (timeLeft <= 0 && !nextCallTimeout) {\n      nextCallNow = now + msecs;\n      callback(...args);\n      return;\n    }\n\n    if (nextCallTimeout) {\n      clearTimeout(nextCallTimeout);\n      nextCallTimeout = null;\n    }\n\n    nextCallTimeout = setTimeout(() => {\n      nextCallNow = +new Date() + msecs;\n      callback(...args);\n\n      clearTimeout(nextCallTimeout as TimeoutHandle);\n      nextCallTimeout = null;\n    }, timeLeft);\n  }) as T;\n};\n\nexport const debounce = <T extends (...args: any) => void>(\n  callback: T,\n  msecs: number\n): T => {\n  let nextCallTimeout: TimeoutHandle | null;\n\n  return ((...args: any): void => {\n    clearTimeout(nextCallTimeout as TimeoutHandle);\n\n    nextCallTimeout = setTimeout(() => {\n      callback(...args);\n      nextCallTimeout = null;\n    }, msecs);\n  }) as T;\n};\n", "class CustomError extends Error {\n  originalError?: Error;\n\n  constructor(originalError: unknown) {\n    const isOrigErrorValid = originalError instanceof Error;\n    const prevStackLines = isOrigErrorValid\n      ? originalError.stack?.split('\\n')\n      : [];\n\n    super(isOrigErrorValid\n      ? `${originalError.name}: ${originalError.message}`\n      : '');\n\n    this.name = this.constructor.name;\n    if (isOrigErrorValid) {\n      this.originalError = originalError;\n    }\n\n    if (prevStackLines?.length && this.stack) {\n      this.stack = this.stack\n        .split('\\n')\n        .slice(0, 2)\n        .concat(\n          prevStackLines.slice(1, prevStackLines.length)\n        )\n        .join('\\n');\n    }\n  }\n}\n\nexport class PersistError extends CustomError {}\nexport class RehydrateError extends CustomError {}\n", "import { Store } from 'redux';\nimport { REMEMBER_REHYDRATED } from './action-types';\nimport { ExtendedOptions } from './types';\nimport { pick } from './utils';\nimport { RehydrateError } from './errors';\n\ntype RehydrateOptions = Pick<\n  ExtendedOptions,\n  'driver' | 'prefix' | 'unserialize' | 'persistWholeStore' | 'errorHandler'\n>\n\ntype LoadAllOptions = Pick<\n  ExtendedOptions,\n  'driver' | 'prefix' | 'unserialize'\n> & {\n  rememberedKeys: string[]\n};\n\nexport const loadAll = async ({\n  rememberedKeys,\n  driver,\n  prefix,\n  unserialize\n}: LoadAllOptions): Promise<Record<string, any>> => {\n  const key = 'rootState';\n  const data = await driver.getItem(`${prefix}${key}`);\n\n  if (data === null || data === undefined) {\n    return {};\n  }\n\n  return pick(\n    unserialize(data, key),\n    rememberedKeys\n  );\n};\n\nexport const loadAllKeyed = async ({\n  rememberedKeys,\n  driver,\n  prefix,\n  unserialize\n}: LoadAllOptions): Promise<Record<string, any>> => {\n  const items = await Promise.all(\n    rememberedKeys.map((key) => driver.getItem(\n      `${prefix}${key}`\n    ))\n  );\n\n  return rememberedKeys.reduce((obj: Record<string, any>, key, i) => {\n    if (items[i] !== null && items[i] !== undefined) {\n      obj[key] = unserialize(items[i], key);\n    }\n\n    return obj;\n  }, {});\n};\n\nexport const rehydrate = async (\n  store: Store,\n  rememberedKeys: string[],\n  {\n    prefix,\n    driver,\n    persistWholeStore,\n    unserialize,\n    errorHandler\n  }: RehydrateOptions\n) => {\n  let state = store.getState();\n\n  try {\n    const load = persistWholeStore\n      ? loadAll\n      : loadAllKeyed;\n\n    state = {\n      ...state,\n      ...await load({\n        rememberedKeys,\n        driver,\n        prefix,\n        unserialize\n      })\n    };\n  } catch (err) {\n    errorHandler(new RehydrateError(err));\n  }\n\n  store.dispatch({\n    type: REMEMBER_REHYDRATED,\n    payload: state\n  });\n};\n", "const getObjectType = (o: object): string | undefined => Object.prototype.toString.call(o).match(\n  /\\[object (.*)\\]/\n)?.[1];\n\nconst isTypedArray = (o: object): boolean => (\n  /^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\\]$/\n    .test(Object.prototype.toString.call(o))\n);\n\nconst isDeepEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object'\n    || a === null || a === undefined || b === null || b === undefined\n  ) {\n    return a !== a && b !== b;\n  }\n\n  if (a.constructor !== b.constructor) {\n    return false;\n  }\n\n  if (a.constructor === RegExp) {\n    return a.source === b.source && a.flags === b.flags;\n  }\n\n  if (Array.isArray(a)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = a.length; i-- !== 0;) {\n      if (!isDeepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (isTypedArray(a) && isTypedArray(b)) {\n    if (a.byteLength !== b.byteLength) {\n      return false;\n    }\n\n    for (let i = a.byteLength; i-- !== 0;) {\n      if (!isDeepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const aType = getObjectType(a);\n  const bType = getObjectType(b);\n\n  if (aType === 'DataView' && bType === 'DataView') {\n    if (a.byteLength !== b.byteLength || a.byteOffset !== b.byteOffset) {\n      return false;\n    }\n\n    return isDeepEqual(a.buffer, b.buffer);\n  }\n\n  if (aType === 'ArrayBuffer' && bType === 'ArrayBuffer') {\n    if (a.byteLength !== b.byteLength) {\n      return false;\n    }\n\n    return isDeepEqual(new Uint8Array(a), new Uint8Array(b));\n  }\n\n  if (aType === 'Map' && bType === 'Map') {\n    if (a.size !== b.size) {\n      return false;\n    }\n\n    for (const [key] of a.entries()) {\n      if (!b.has(key)) {\n        return false;\n      }\n    }\n\n    for (const [key, value] of a.entries()) {\n      if (!isDeepEqual(value, b.get(key))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (aType === 'Set' && bType === 'Set') {\n    if (a.size !== b.size) {\n      return false;\n    }\n\n    for (const [key] of a.entries()) {\n      if (!b.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (aType === 'Date' && bType === 'Date') {\n    return +a === +b;\n  }\n\n  const aKeys = Object.keys(a);\n  if (aKeys.length !== Object.keys(b).length) {\n    return false;\n  }\n\n  for (let i = aKeys.length; i-- !== 0;) {\n    if (!Object.prototype.hasOwnProperty.call(b, aKeys[i])) {\n      return false;\n    }\n  }\n\n  for (let i = aKeys.length; i-- !== 0;) {\n    const key = aKeys[i];\n\n    if (!isDeepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  if (aType !== 'Object' && bType !== 'Object') {\n    return a === b;\n  }\n\n  return true;\n};\n\nexport default isDeepEqual;\n", "import { PersistError } from './errors';\nimport isDeepEqual from './is-deep-equal';\nimport { ExtendedOptions } from './types';\n\ntype PersistOptions = Pick<\n  ExtendedOptions,\n  'prefix' | 'driver' | 'serialize' | 'persistWholeStore' | 'errorHandler'\n>\n\ntype SaveAllOptions = Pick<\n  ExtendedOptions,\n  'prefix' | 'driver' | 'serialize'\n>;\n\nexport const saveAll = (\n  state: any,\n  oldState: any,\n  { prefix, driver, serialize }: SaveAllOptions\n) => {\n  if (!isDeepEqual(state, oldState)) {\n    return driver.setItem(\n      `${prefix}rootState`,\n      serialize(state, 'rootState')\n    );\n  }\n};\n\nexport const saveAllKeyed = (\n  state: any,\n  oldState: any,\n  { prefix, driver, serialize }: SaveAllOptions\n) => Promise.all(\n  Object.keys(state).map((key) => {\n    if (isDeepEqual(state[key], oldState[key])) {\n      return Promise.resolve();\n    }\n\n    return driver.setItem(\n      `${prefix}${key}`,\n      serialize(state[key], key)\n    );\n  })\n);\n\nexport const persist = async (\n  state = {},\n  oldState = {},\n  {\n    prefix,\n    driver,\n    persistWholeStore,\n    serialize,\n    errorHandler\n  }: PersistOptions\n) => {\n  try {\n    const save = persistWholeStore\n      ? saveAll\n      : saveAllKeyed;\n\n    await save(\n      state,\n      oldState,\n      { prefix, driver, serialize }\n    );\n  } catch (err) {\n    errorHandler(new PersistError(err));\n  }\n};\n", "import { Store } from 'redux';\nimport { ExtendedOptions } from './types';\nimport { rehydrate } from './rehydrate';\nimport { persist } from './persist';\nimport { REMEMBER_PERSISTED } from './action-types';\nimport { pick, throttle, debounce } from './utils';\nimport isDeepEqual from './is-deep-equal';\n\nconst init = async (\n  store: Store<any, any>,\n  rememberedKeys: string[],\n  {\n    prefix,\n    driver,\n    serialize,\n    unserialize,\n    persistThrottle,\n    persistDebounce,\n    persistWholeStore,\n    errorHandler\n  }: ExtendedOptions\n) => {\n  await rehydrate(\n    store,\n    rememberedKeys,\n    { prefix, driver, unserialize, persistWholeStore, errorHandler }\n  );\n\n  let oldState = {};\n\n  const persistFunc = async () => {\n    const state = pick(\n      store.getState(),\n      rememberedKeys\n    );\n\n    await persist(\n      state,\n      oldState,\n      { prefix, driver, serialize, persistWholeStore, errorHandler }\n    );\n\n    if (!isDeepEqual(state, oldState)) {\n      store.dispatch({\n        type: REMEMBER_PERSISTED,\n        payload: state\n      });\n    }\n\n    oldState = state;\n  };\n\n  if (persistDebounce && persistDebounce > 0) {\n    store.subscribe(debounce(persistFunc, persistDebounce));\n  } else {\n    store.subscribe(throttle(persistFunc, persistThrottle));\n  }\n};\n\nexport default init;\n", "import init from './init';\nimport { REMEMBER_REHYDRATED, REMEMBER_PERSISTED } from './action-types';\nimport { Driver, Options } from './types';\nimport {\n  Action,\n  StoreEnhancer,\n  Reducer,\n  Store,\n  StoreCreator,\n  ReducersMapObject,\n  combineReducers,\n  UnknownAction\n} from 'redux';\n\nexport * from './errors';\nexport * from './types';\n\nconst rememberReducer = <S = any, A extends Action = UnknownAction, PreloadedState = S>(\n  reducer: Reducer<S, A, PreloadedState> | ReducersMapObject<S, A, PreloadedState>\n): Reducer<S, A, PreloadedState> => {\n  const data: any = {\n    state: {}\n  };\n\n  return (state: any = data.state, action: any) => {\n    if (action.type && (\n      action?.type === '@@INIT'\n      || action?.type?.startsWith('@@redux/INIT')\n    )) {\n      data.state = { ...state };\n    }\n\n    const rootReducer = typeof reducer === 'function'\n      ? reducer\n      : combineReducers(reducer);\n\n    switch (action.type) {\n      case REMEMBER_REHYDRATED: {\n        const rehydratedState = {\n          ...data.state,\n          ...(action?.payload || {})\n        };\n\n        data.state = rootReducer(\n          rehydratedState,\n          {\n            type: REMEMBER_REHYDRATED,\n            payload: rehydratedState\n          } as any\n        );\n\n        return data.state;\n      }\n      default:\n        return rootReducer(\n          state,\n          action\n        );\n    }\n  };\n};\n\nconst rememberEnhancer = <Ext extends {} = {}, StateExt extends {} = {}>(\n  driver: Driver,\n  rememberedKeys: string[],\n  {\n    prefix = '@@remember-',\n    serialize = (data) => JSON.stringify(data),\n    unserialize = (data) => JSON.parse(data),\n    persistThrottle = 100,\n    persistDebounce,\n    persistWholeStore = false,\n    initActionType,\n    errorHandler = console.warn\n  }: Partial<Options> = {}\n): StoreEnhancer<Ext, StateExt> => {\n  const storeCreator = (createStore: StoreCreator): StoreCreator => (\n    rootReducer: Reducer<any>,\n    preloadedState?: any,\n    enhancer?: StoreEnhancer\n  ): Store => {\n    let isInitialized = false;\n    const initialize = (store: Store) => init(\n      store,\n      rememberedKeys,\n      {\n        driver,\n        prefix,\n        serialize,\n        unserialize,\n        persistThrottle,\n        persistDebounce,\n        persistWholeStore,\n        errorHandler\n      }\n    );\n\n    const store = createStore(\n      (state, action) => {\n        if (!isInitialized\n          && initActionType\n          && action.type === initActionType\n        ) {\n          isInitialized = true;\n          setTimeout(() => initialize(store), 0);\n        }\n\n        return rootReducer(state, action);\n      },\n      preloadedState,\n      enhancer\n    );\n\n    if (!initActionType) {\n      isInitialized = true;\n      void initialize(store);\n    }\n\n    return store;\n  };\n\n  return storeCreator;\n};\n\nexport {\n  rememberReducer,\n  rememberEnhancer,\n  REMEMBER_REHYDRATED,\n  REMEMBER_PERSISTED\n};\n"],
  "mappings": "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",
  "names": ["REMEMBER_REHYDRATED", "REMEMBER_PERSISTED", "pick", "src", "keys", "index", "dest", "length", "key", "hasOwnProperty", "throttle", "callback", "msecs", "nextCallNow", "nextCallTimeout", "_len", "arguments", "args", "Array", "_key", "now", "Date", "timeLeft", "apply", "clearTimeout", "setTimeout", "debounce", "_len2", "_key2", "CustomError", "_Error", "originalError", "_originalError$stack", "_this", "isOrigErrorValid", "Error", "prevStackLines", "stack", "split", "call", "name", "message", "constructor", "length", "slice", "concat", "join", "_inheritsLoose", "_wrapNativeSuper", "PersistError", "_CustomError2", "apply", "arguments", "RehydrateError", "_CustomError3", "loadAll", "_ref2", "_asyncToGenerator", "_ref", "rememberedKeys", "driver", "prefix", "unserialize", "key", "data", "getItem", "undefined", "pick", "_x", "apply", "arguments", "loadAllKeyed", "_ref4", "_ref3", "items", "Promise", "all", "map", "reduce", "obj", "i", "_x2", "rehydrate", "_ref6", "store", "_ref5", "persistWholeStore", "errorHandler", "state", "getState", "load", "_objectSpread", "err", "RehydrateError", "dispatch", "type", "REMEMBER_REHYDRATED", "payload", "_x3", "_x4", "_x5", "getObjectType", "o", "_Object$prototype$toS", "Object", "prototype", "toString", "call", "match", "isTypedArray", "test", "isDeepEqual", "a", "b", "undefined", "constructor", "RegExp", "source", "flags", "Array", "isArray", "length", "i", "byteLength", "aType", "bType", "byteOffset", "buffer", "Uint8Array", "size", "_iterator", "_createForOfIteratorHelperLoose", "entries", "_step", "done", "_step$value", "value", "key", "has", "_iterator2", "_step2", "_step2$value", "get", "_iterator3", "_step3", "_step3$value", "aKeys", "keys", "hasOwnProperty", "saveAll", "state", "oldState", "_ref", "prefix", "driver", "serialize", "isDeepEqual", "setItem", "saveAllKeyed", "_ref2", "Promise", "all", "Object", "keys", "map", "key", "resolve", "persist", "_ref4", "_asyncToGenerator", "_ref3", "persistWholeStore", "errorHandler", "save", "err", "PersistError", "_x", "_x2", "_x3", "apply", "arguments", "init", "_ref2", "_asyncToGenerator", "store", "rememberedKeys", "_ref", "prefix", "driver", "serialize", "unserialize", "persistThrottle", "persistDebounce", "persistWholeStore", "errorHandler", "rehydrate", "oldState", "persistFunc", "_ref3", "state", "pick", "getState", "persist", "isDeepEqual", "dispatch", "type", "REMEMBER_PERSISTED", "payload", "apply", "arguments", "subscribe", "debounce", "throttle", "_x", "_x2", "_x3", "rememberReducer", "reducer", "data", "state", "action", "_action$type", "type", "startsWith", "_objectSpread", "rootReducer", "combineReducers", "REMEMBER_REHYDRATED", "rehydratedState", "payload", "rememberEnhancer", "driver", "rememberedKeys", "_temp", "_ref", "_ref$prefix", "prefix", "_ref$serialize", "serialize", "JSON", "stringify", "_ref$unserialize", "unserialize", "parse", "_ref$persistThrottle", "persistThrottle", "persistDebounce", "_ref$persistWholeStor", "persistWholeStore", "initActionType", "_ref$errorHandler", "errorHandler", "console", "warn", "storeCreator", "createStore", "preloadedState", "enhancer", "isInitialized", "initialize", "store", "init", "setTimeout"]
}
